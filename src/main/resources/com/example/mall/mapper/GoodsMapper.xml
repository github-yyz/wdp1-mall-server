<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mall.mapper.GoodsMapper">
    <select id="selectAllGoodsTypeFromTableGoodsType" resultType="com.example.mall.model.po.GoodsTypePO">
        select id, name
        from goods_type
    </select>

    <select id="selectGoodsFromTableGoodsByTypeId" resultType="com.example.mall.model.po.GoodsPO">
        select id, img, name, price, type_id as typeId
        from goods
        <where>
            <if test="typeId != -1">
                type_id = #{typeId}
            </if>
        </where>

        <!--        where type_id = #{typeId}-->
    </select>

    <select id="selectStockNumFromTableGoodsSpecByGoodsId" resultType="java.lang.Integer">
        select sum(stock_num) as stcokNum
        from goods_spec
        group by goods_id
        having goods_id = #{goodsId}
    </select>

    <insert id="insertIntoTableGoodsType">
        insert into goods_type(name)
        values (#{name})
    </insert>

    <select id="selectGoodsTypeFromTableGoodsTypeByName" resultType="com.example.mall.model.po.GoodsTypePO">
        select id, name
        from goods_type
        where name = #{name}
    </select>

    <insert id="insertGoodsIntoTableGoods" useGeneratedKeys="true" keyProperty="id">
        insert into goods(id, img, name, price, type_id, description)
        values (#{goodsPO.id}, #{goodsPO.img}, #{goodsPO.name}, #{goodsPO.price}, #{goodsPO.typeId},
                #{goodsPO.description})
    </insert>

    <insert id="insertGoodsSpecListIntoTableGoodsSpec" useGeneratedKeys="true" keyProperty="id">
        insert into goods_spec(id, goods_id, name, stock_num, price)
        values
        <foreach collection="specPOList" item="spec" separator=",">
            (null, #{spec.goodsId}, #{spec.name},#{spec.stockNum},#{spec.price})
        </foreach>
    </insert>

    <select id="selectPriceFromTableGoodsById" resultType="java.lang.Double">
        select price
        from goods
        where id = #{id}
    </select>

    <update id="updateTableGoodsSetPriceById">
        update goods
        set price=#{price}
        where id = #{id}
    </update>

    <select id="selectGoodsById" resultType="com.example.mall.model.po.GoodsPO">
        select id, img, name, description, price, type_id as typeId
        from goods
        where id = #{id}
    </select>

    <select id="selectGoodsSpecListByGoodsId" resultType="com.example.mall.model.po.GoodsSpecPO">
        select id, goods_id as goodsId, name, stock_num as stockNum, price
        from goods_spec
        where goods_id = #{id}
    </select>

    <delete id="deleteGoodsById">
        delete
        from goods
        where id = #{id}
    </delete>

    <delete id="deleteGoodsSpecByGoodsId">
        delete
        from goods_spec
        where goods_id = #{goodsId}
    </delete>

    <select id="selectSpecPriceFromGoodsSpecById" resultType="java.lang.Double">
        select price
        from goods_spec
        where id = #{specId}
    </select>

    <select id="selectNoReplyMsgList" resultType="com.example.mall.model.po.MsgPO">
        select id, content, state, create_time as createTime, goods_id as goodsId, user_id as userId
        from goods_msg
        where state = 1;
    </select>

    <select id="selectRepliedMsgMsgList" resultType="com.example.mall.model.po.MsgPO">
        select id,
               content,
               reply_content as replyContent,
               state,
               create_time   as createTime,
               goods_id      as goodsId,
               user_id       as userId
        from goods_msg
        where state = 0;
    </select>

    <update id="updateReplyContentAndStateById">
        update goods_msg
        set reply_content = #{replyContent},
            state         = 0,
            reply_time    = #{replyTime}
        where id = #{id}
    </update>

    <select id="selectGoodsListByKeyword" resultType="com.example.mall.model.po.GoodsPO">
        select id, img, name, description, price, type_id as typeId
        from goods
        where name like "%"#{keyword}"%"
    </select>

    <select id="selectMsgListByGoodsId" resultType="com.example.mall.model.po.MsgPO">
        select id,
               content,
               reply_content as replyContent,
               state,
               create_time   as createTime,
               reply_time    as replyTime,
               goods_id      as goodsId,
               user_id       as userId
        from goods_msg
        where goods_id = #{goodsId}
    </select>

    <insert id="insertMsgUseMsgPO">
        insert into goods_msg(id, reply_content, content, state, create_time, reply_time, goods_id, user_id)
        values (#{msgPO.id}, #{msgPO.replyContent}, #{msgPO.content}, #{msgPO.state}, #{msgPO.createTime},
                #{msgPO.replyTime}, #{msgPO.goodsId}, #{msgPO.userId})
    </insert>

    <select id="selectGoodsPOByGoodsSpecId" resultType="com.example.mall.model.po.GoodsPO">
        select id, img, name, description, price, type_id as typeId
        from goods
        where id = (select goods_id from goods_spec where id = #{specId})
    </select>

    <select id="selectGoodsSpecPOByGoodsSpecId" resultType="com.example.mall.model.po.GoodsSpecPO">
        select id, goods_id as goodsId, name, stock_num as stockNum, price
        from goods_spec
        where id = #{specId}
    </select>

    <update id="updateGoodsSpecStockNum">
        update goods_spec
        set stock_num = (stock_num + (#{number}))
        where id = #{specId};
    </update>

    <update id="updateGoodsByGoodsPO">
        update goods
        <set>
            <if test="goodsPO.img != null">
                img = #{goodsPO.img},
            </if>
            <if test="goodsPO.name != null">
                name = #{goodsPO.name},
            </if>
            <if test="goodsPO.description != null">
                description = #{goodsPO.description},
            </if>
            <if test="goodsPO.price != null">
                price = #{goodsPO.price},
            </if>
            <if test="goodsPO.typeId != null">
                type_id = #{goodsPO.typeId},
            </if>
        </set>
        where id = #{goodsPO.id}
    </update>

    <insert id="insertGoodsIntoTableGoodsDe">
        insert into goods_de(id, img, name, price, type_id, description)
        values (#{goodsPO.id}, #{goodsPO.img}, #{goodsPO.name}, #{goodsPO.price}, #{goodsPO.typeId},
                #{goodsPO.description})
    </insert>

    <insert id="insertGoodsSpecListIntoTableGoodsSpecDe">
        insert into goods_spec_de(id, goods_id, name, stock_num, price)
        values
        <foreach collection="specPOList" item="spec" separator=",">
            (null, #{spec.goodsId}, #{spec.name},#{spec.stockNum},#{spec.price})
        </foreach>
    </insert>

    <select id="selectSpecPriceFromGoodsSpecDeById" resultType="java.lang.Double">
        select price
        from goods_spec_de
        where id = #{specId}
    </select>

    <select id="selectGoodsSpecPOFromDeByGoodsSpecId" resultType="com.example.mall.model.po.GoodsSpecPO">
        select id, goods_id as goodsId, name, stock_num as stockNum, price
        from goods_spec_de
        where id = #{specId}
    </select>
</mapper>